package barber;

import java.util.LinkedList;
import java.util.Queue;

public class Main {
	public static void main(String args[]) {
		
		Queue<Thread> barbers = new LinkedList<Thread>();
		if (args.length < 9) {
			System.out.println("Usage: [number of waiting seats in shop] "
									+ "[number of barber] "
									+ "[maximal working time for barbers] "
									+ "[number of customer generator] "
									+ "[number of customers generated by each generator"
									+ "[minimal service time of a customer] "
									+ "[maximal service time of a customer] "
									+ "[minimal time of interval between two customer's entrance] "
									+ "[maximal time of interval between two customer's entrance]");
			System.exit(1);
		}*/
		try {
			int seatCap = Integer.parseInt(args[0]);
			int numBarber = Integer.parseInt(args[1]);
			int maxWorkTime = Integer.parseInt(args[2]);
			int numGenerator = Integer.parseInt(args[3]);
			int numCustomerPerGenerator = Integer.parseInt(args[4]);
			int minServiceTime = Integer.parseInt(args[5]);
			int maxServiceTime = Integer.parseInt(args[6]);
			int minInterval = Integer.parseInt(args[7]);
			int maxInterval = Integer.parseInt(args[8]);
				/*
			int seatCap = 40;
			int numBarber = 100;
			int maxWorkTime = 100000;
			int numGenerator = 10;
			int numCustomerPerGenerator = 100;
			int minServiceTime = 100;
			int maxServiceTime = 1000;
			int minInterval = 100;
			int maxInterval = 1000;
			*/
			
			Shop shop = new Shop(seatCap,minInterval,maxInterval);
			
			for (int i = 0; i < numBarber; i++) {
				barbers.add((new Thread(new Barber(i, maxWorkTime, shop,maxServiceTime))));
				barbers.element().start();
				shop.addBarber(barbers.remove());
				++shop.barberCount;
			}
			
			Thread[] generators = new Thread[numGenerator];
			for (int i = 0; i < numGenerator; i++) {
				generators[i] = new Thread(new CustomerGenerator(
						i*numCustomerPerGenerator, numCustomerPerGenerator, 
						minServiceTime, maxServiceTime,	minInterval, maxInterval, shop
						));
				generators[i].start();
				
			}
			for (int i = 0; i < generators.length; i++) {
				generators[i].join();
			}
			
			while (shop.isInService()){
				Thread.sleep(500);
			}
			
			System.out.println("Total number of customer: " + numGenerator*numCustomerPerGenerator);
			System.out.println("Number of customer unserved: " + (shop.left + shop.waiting));
			System.out.println("Number of customer served: " + shop.served);
			
			assert((shop.left + shop.served + shop.waiting) == numGenerator*numCustomerPerGenerator);
			System.out.println("Assertion Passed");
			
			System.exit(0);
		} catch (NumberFormatException nfe) {
			System.out.println("Arguments are not in correct number format.");
			nfe.printStackTrace();
		} catch (InterruptedException ie) {}
		
	}//main
}//class Main
